#!/bin/sh

SCRIPT=$(readlink -f "$0")
SCRIPTPATH=$(dirname "$SCRIPT")

cd "$SCRIPTPATH"

echo "cat -h"
../bin/cat.mjs -h
if [ "$?" != "0" ]; then exit 1; fi

echo "cat -V"
../bin/cat.mjs -V
if [ "$?" != "0" ]; then exit 1; fi

echo "cat -z"
../bin/cat.mjs -z
if [ "$?" != "1" ]; then exit 1; fi

echo stdout | ../bin/cat.mjs -l
if [ "$?" != "0" ]; then exit 1; fi

../bin/cat.mjs -l invalid
if [ "$?" != "1" ]; then exit 1; fi

check() {
	code=$1
	actual=$2
	name=$3
	if [ "$code" != "0" ]; then exit 1; fi
	echo "comparing the result"
	local expected=`cat out/$name.txt`
	if [ "$actual" != "$expected" ]; then
		echo "---------------------------------------- actual:"
		echo "$actual"
		echo "---------------------------------------- expected:"
		echo "$expected"
		echo "----------------------------------------"
		exit 1
	fi
}

echo "cat -- in/control-chars.txt in/one-empty-line.txt in/two-empty-lines.txt"
actual=`../bin/cat.mjs -- in/control-chars.txt in/one-empty-line.txt in/two-empty-lines.txt`
check $? "$actual" "default"

echo "cat -s in/one-empty-line.txt in/two-empty-lines.txt"
actual=`../bin/cat.mjs -s in/one-empty-line.txt in/two-empty-lines.txt`
check $? "$actual" "s"

echo "cat --squeeze-blank in/one-empty-line.txt in/two-empty-lines.txt"
actual=`../bin/cat.mjs --squeeze-blank in/one-empty-line.txt in/two-empty-lines.txt`
check $? "$actual" "s"

echo "cat -n in/one-empty-line.txt in/two-empty-lines.txt"
actual=`../bin/cat.mjs -n in/one-empty-line.txt in/two-empty-lines.txt`
check $? "$actual" "n"

echo "cat -ns in/one-empty-line.txt in/two-empty-lines.txt"
actual=`../bin/cat.mjs -ns in/one-empty-line.txt in/two-empty-lines.txt`
check $? "$actual" "ns"

echo "cat -bu in/one-empty-line.txt in/two-empty-lines.txt"
actual=`../bin/cat.mjs -bu in/one-empty-line.txt in/two-empty-lines.txt`
check $? "$actual" "b"

echo "cat -bs in/one-empty-line.txt in/two-empty-lines.txt"
actual=`../bin/cat.mjs -bs in/one-empty-line.txt in/two-empty-lines.txt`
check $? "$actual" "bs"

echo "cat -E in/one-empty-line.txt"
actual=`../bin/cat.mjs -E in/one-empty-line.txt`
check $? "$actual" "capital-e"

echo "cat -nE in/one-empty-line.txt"
actual=`../bin/cat.mjs -nE in/one-empty-line.txt`
check $? "$actual" "ne"

echo "cat -bE in/one-empty-line.txt"
actual=`../bin/cat.mjs -bE in/one-empty-line.txt`
check $? "$actual" "be"

echo "cat -T in/control-chars.txt"
actual=`../bin/cat.mjs -T in/control-chars.txt`
check $? "$actual" "capital-t"

echo "cat -v in/control-chars.txt"
actual=`../bin/cat.mjs -v in/control-chars.txt`
check $? "$actual" "v"

echo "cat -vT in/control-chars.txt"
actual=`../bin/cat.mjs -vT in/control-chars.txt`
check $? "$actual" "vt"

echo "cat -e in/control-chars.txt in/one-empty-line.txt"
actual=`../bin/cat.mjs -e in/control-chars.txt in/one-empty-line.txt`
check $? "$actual" "e"

echo "cat -t in/control-chars.txt"
actual=`../bin/cat.mjs -t in/control-chars.txt`
check $? "$actual" "t"

echo "cat -vE in/control-chars.txt in/one-empty-line.txt"
actual=`../bin/cat.mjs -vE in/control-chars.txt in/one-empty-line.txt`
check $? "$actual" "ve"

echo "cat -vET in/control-chars.txt in/one-empty-line.txt"
actual=`../bin/cat.mjs -vET in/control-chars.txt in/one-empty-line.txt`
check $? "$actual" "vet"

echo "cat -A in/control-chars.txt in/one-empty-line.txt"
actual=`../bin/cat.mjs -A in/control-chars.txt in/one-empty-line.txt`
check $? "$actual" "a"

echo "done"
